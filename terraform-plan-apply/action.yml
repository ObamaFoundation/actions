name: "Terraform Plan & Apply"
description: "Terraform plan and apply for a Component / Subdirectory"

inputs:
  component:
    description: 'Component / Subdirectory Name'
    required: true
  apply:
    description: 'Apply the plan as a part of this action?'
    default: 'false'
  skip_fmt:
    description: 'Skip terraform fmt?'
    default: 'false'
  skip_validate:
    description: 'Skip terraform validate?'
    default: 'false'

runs: 
  using: composite
  steps:
    - uses: hashicorp/setup-terraform@v2
    # We always run init.
    - name: Terraform init
      id: init
      shell: bash
      run: terraform -chdir=${{ inputs.component }} init

    #  Skippables. Usually we should run them, though.
    - name: Terraform fmt
      if: ${{ inputs.skip_fmt != 'true' }}
      id: fmt
      shell: bash
      run: terraform -chdir=${{ inputs.component }} fmt -check
    - name: Terraform validate
      if: ${{ inputs.skip_validate != 'true' }}
      id: validate
      shell: bash
      run: terraform -chdir=${{ inputs.component }} validate
      
    - name: Terraform plan
      if: ${{ inputs.apply == 'false' }}
      id: plan
      shell: bash
      run: |
        terraform -chdir=${{ inputs.component }} \
          -refresh=false \
          -lock=false \
          -detailed-exitcode \
          plan ||
        if [ $? -eq 2 ]; then
          terraform -chdir=${{ inputs.component }} -out=${{ inputs.component }}.tfplan plan
        else
          echo "Failed to run `terraform plan` >&2 
          exit 1
        fi

    # DANGER: Only apply when explicitly instructed.
    - name: Terraform apply
      if: ${{ inputs.apply == 'true' }}
      id: apply
      shell: bash
      run: terraform -chdir=${{ inputs.component }} apply -auto-approve
      
